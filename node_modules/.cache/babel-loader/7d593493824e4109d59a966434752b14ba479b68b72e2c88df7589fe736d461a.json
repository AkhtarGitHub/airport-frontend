{"ast":null,"code":"var _jsxFileName = \"/Users/admin/IdeaProjects/airport-frontend/src/components/FlightSchedule.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getFlights } from '../services/api';\nimport '../styles/theme.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightSchedule = () => {\n  _s();\n  const [flights, setFlights] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchFlights = async () => {\n      try {\n        // In a real app, you would call the actual API\n        // const data = await getFlights();\n        // For demo, we'll use mock data\n        const mockFlights = [{\n          id: 1,\n          flightNumber: 'AA123',\n          departure: 'YYZ',\n          arrival: 'JFK',\n          departureTime: '2023-12-01T08:00:00',\n          arrivalTime: '2023-12-01T10:30:00',\n          status: 'On Time',\n          aircraftType: 'Boeing 737'\n        }, {\n          id: 2,\n          flightNumber: 'DL456',\n          departure: 'JFK',\n          arrival: 'LAX',\n          departureTime: '2023-12-01T12:00:00',\n          arrivalTime: '2023-12-01T15:30:00',\n          status: 'Delayed',\n          aircraftType: 'Airbus A320'\n        }];\n        setFlights(mockFlights);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchFlights();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading flight schedules...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flight-schedule\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Flight Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flight-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"flight-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Flight #\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Departure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Arrival\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Departure Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Arrival Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Aircraft\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: flights.map(flight => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: flight.flightNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: flight.departure\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: flight.arrival\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(flight.departureTime).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(flight.arrivalTime).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `status-${flight.status.toLowerCase().replace(' ', '-')}`,\n              children: flight.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: flight.aircraftType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, flight.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightSchedule, \"TE5ZpJRWWYYMmvxDLrhPQEjIVS8=\");\n_c = FlightSchedule;\nexport default FlightSchedule;\nvar _c;\n$RefreshReg$(_c, \"FlightSchedule\");","map":{"version":3,"names":["useState","useEffect","getFlights","jsxDEV","_jsxDEV","FlightSchedule","_s","flights","setFlights","loading","setLoading","error","setError","fetchFlights","mockFlights","id","flightNumber","departure","arrival","departureTime","arrivalTime","status","aircraftType","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","flight","Date","toLocaleString","toLowerCase","replace","_c","$RefreshReg$"],"sources":["/Users/admin/IdeaProjects/airport-frontend/src/components/FlightSchedule.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getFlights } from '../services/api';\nimport '../styles/theme.css';\n\nconst FlightSchedule = () => {\n  const [flights, setFlights] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchFlights = async () => {\n      try {\n        // In a real app, you would call the actual API\n        // const data = await getFlights();\n        // For demo, we'll use mock data\n        const mockFlights = [\n          {\n            id: 1,\n            flightNumber: 'AA123',\n            departure: 'YYZ',\n            arrival: 'JFK',\n            departureTime: '2023-12-01T08:00:00',\n            arrivalTime: '2023-12-01T10:30:00',\n            status: 'On Time',\n            aircraftType: 'Boeing 737'\n          },\n          {\n            id: 2,\n            flightNumber: 'DL456',\n            departure: 'JFK',\n            arrival: 'LAX',\n            departureTime: '2023-12-01T12:00:00',\n            arrivalTime: '2023-12-01T15:30:00',\n            status: 'Delayed',\n            aircraftType: 'Airbus A320'\n          }\n        ];\n        setFlights(mockFlights);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    fetchFlights();\n  }, []);\n\n  if (loading) return <div>Loading flight schedules...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div className=\"flight-schedule\">\n      <h2>Flight Schedule</h2>\n      <div className=\"flight-table-container\">\n        <table className=\"flight-table\">\n          <thead>\n            <tr>\n              <th>Flight #</th>\n              <th>Departure</th>\n              <th>Arrival</th>\n              <th>Departure Time</th>\n              <th>Arrival Time</th>\n              <th>Status</th>\n              <th>Aircraft</th>\n            </tr>\n          </thead>\n          <tbody>\n            {flights.map(flight => (\n              <tr key={flight.id}>\n                <td>{flight.flightNumber}</td>\n                <td>{flight.departure}</td>\n                <td>{flight.arrival}</td>\n                <td>{new Date(flight.departureTime).toLocaleString()}</td>\n                <td>{new Date(flight.arrivalTime).toLocaleString()}</td>\n                <td className={`status-${flight.status.toLowerCase().replace(' ', '-')}`}>\n                  {flight.status}\n                </td>\n                <td>{flight.aircraftType}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default FlightSchedule;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}